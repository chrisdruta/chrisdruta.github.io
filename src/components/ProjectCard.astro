---
interface Props {
    title: string,
    desc: string,
    links: {
        github: string,
        website?: string,
        blog?: string,
        report?: string,
    },
    image?: {
        src: string,
        alt: string,
    }
}

import { Image } from "astro:assets";

const { title, desc, links, image } = Astro.props;
const [user, repo]  = links.github.split("/").splice(-2);

const repoRes = await fetch(`https://api.github.com/repos/${user}/${repo}`);
const repoStats = await repoRes.json();

const { stargazers_count, subscribers_count, forks_count } = repoStats;

import Vr from "./Vr.astro"
---
<div class="prose p-4 w-80 max-h-96">
    <hr class="my-2.5" />
    <p class="prose-xl m-0">{title}</p>
    <p class="prose-sm m-0 min-h-8">{desc}</p>
    <div class="flex flex-row prose-sm">
        <a href={links.github} target="_blank">Github</a>
        {links.website && [<Vr/>,<a href={links.website} target="_blank">Website</a>]}
        {links.blog && [<Vr/>,<a href={links.blog}>Blog</a>]}
        {links.report && [<Vr/>,<a href={links.report} target="_blank">Report</a>]}
    </div>
    <p class="m-1 mt-2 text-xs">
        {stargazers_count !== undefined ? 
            `> stars: ${stargazers_count} | watchers: ${subscribers_count} | forks: ${forks_count}`
            : "> github stats api was rate-limited :("}
    </p>
    {image && <Image class="rounded max-h-48 transition ease-in duration-75 delay-200 hover:scale-200 z-0 hover:z-50"
        src={image.src}
        alt={image.alt}
    />}
</div>
